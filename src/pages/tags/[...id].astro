---
import PostList from "../../components/PostList.astro";
import PageLayout from "../../layouts/PageLayout.astro";
import { type CollectionEntry, getCollection, render } from "astro:content";

export async function getStaticPaths() {
  const tags = await getCollection("tag");
  return tags.map((tag) => ({
    params: { id: tag.id },
    props: tag,
  }));
}
type Props = CollectionEntry<"tag">;

const tag = Astro.props;
const { Content } = await render(tag);

const posts = await getCollection("entity");
const tagPosts = posts
  .filter((post) => post.data.draft === false)
  .filter((post) => post.data.tags.includes(tag.id))
  .sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf());

const title = tag.data.title;
const description = `All posts about ${title}`;
---
<PageLayout title={title} description={description}>
    <h2>
      <div class="flex">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-8 h-6">
          <path fill-rule="evenodd" d="M5.25 2.25a3 3 0 00-3 3v4.318a3 3 0 00.879 2.121l9.58 9.581c.92.92 2.39 1.186 3.548.428a18.849 18.849 0 005.441-5.44c.758-1.16.492-2.629-.428-3.548l-9.58-9.581a3 3 0 00-2.122-.879H5.25zM6.375 7.5a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z" clip-rule="evenodd" />
        </svg>
        
        {tag.data.title}
      </div>
    </h2>
    <Content />
    {tagPosts.length === 0 && <p>No posts yet.</p>}
    {
      tagPosts.length > 0 && (
        <>
        <PostList posts={tagPosts} />
        </>
      )
    }
</PageLayout>
