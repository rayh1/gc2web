---
import { getCollection, getEntryBySlug } from "astro:content";

/**
 * This component expects either a list of tags as a prop, or an explicit 'all' to render all tags.
 * This way, the component can be used to render a list of tags for a specific page, or all tags for a page like /tags.
 */

interface Props {
  class?: string;
  tags: "all" | string[];
}

const { tags = [] } = Astro.props;

let tagsFromProps = undefined;
if (tags !== "all") {
  tagsFromProps = await Promise.all(
    tags.map((tag) => getEntryBySlug("tag", tag))
  );
}

const allTags = (await getCollection("tag")).sort((a, b) => {
  if (a.data.title < b.data.title) {
    return -1;
  }
  if (a.data.title > b.data.title) {
    return 1;
  }
  return 0;
});

const renderTags = tags === "all" ? allTags : tagsFromProps;
---

<ul class="gap-0 pl-0 list-none flex flex-wrap text-gray-900 dark:text-white">
  {
    !!renderTags &&
    renderTags
        .filter((tag) => !!tag?.slug && !!tag?.data.title)
        .map((tag) => (
          <li>
            <a class="mr-2 no-underline text-gray-600 hover:text-blue-400 md:mr-2 text-sm" href={`/tags/${tag?.slug}/`}>  

              <div class="flex">

                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
                  <path fill-rule="evenodd" d="M5.5 3A2.5 2.5 0 003 5.5v2.879a2.5 2.5 0 00.732 1.767l6.5 6.5a2.5 2.5 0 003.536 0l2.878-2.878a2.5 2.5 0 000-3.536l-6.5-6.5A2.5 2.5 0 008.38 3H5.5zM6 7a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
                </svg>

                {tag?.data.title}

            </div>

            </a>
          </li>
        ))
  }
</ul>
